// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: api/TeaNoticeManage/v1/teaNoticeManage.proto

package teaNoticeManage

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 打回单个学生反馈的请求消息
type CallbackReceiptReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoticeId      int32                  `protobuf:"varint,1,opt,name=notice_id,json=noticeId,proto3" json:"notice_id,omitempty"`
	StudentId     string                 `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallbackReceiptReq) Reset() {
	*x = CallbackReceiptReq{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackReceiptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackReceiptReq) ProtoMessage() {}

func (x *CallbackReceiptReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackReceiptReq.ProtoReflect.Descriptor instead.
func (*CallbackReceiptReq) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{0}
}

func (x *CallbackReceiptReq) GetNoticeId() int32 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

func (x *CallbackReceiptReq) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

// 打回单个学生反馈的响应消息
type CallbackReceiptResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallbackReceiptResp) Reset() {
	*x = CallbackReceiptResp{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallbackReceiptResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackReceiptResp) ProtoMessage() {}

func (x *CallbackReceiptResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackReceiptResp.ProtoReflect.Descriptor instead.
func (*CallbackReceiptResp) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{1}
}

func (x *CallbackReceiptResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CallbackReceiptResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 一键提醒的请求消息
type RemindNoticeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoticeId      int32                  `protobuf:"varint,1,opt,name=notice_id,json=noticeId,proto3" json:"notice_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemindNoticeReq) Reset() {
	*x = RemindNoticeReq{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemindNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemindNoticeReq) ProtoMessage() {}

func (x *RemindNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemindNoticeReq.ProtoReflect.Descriptor instead.
func (*RemindNoticeReq) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{2}
}

func (x *RemindNoticeReq) GetNoticeId() int32 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

// 一键提醒的响应消息
type RemindNoticeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemindNoticeResp) Reset() {
	*x = RemindNoticeResp{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemindNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemindNoticeResp) ProtoMessage() {}

func (x *RemindNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemindNoticeResp.ProtoReflect.Descriptor instead.
func (*RemindNoticeResp) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{3}
}

func (x *RemindNoticeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RemindNoticeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 删除通知的请求消息
type DeleteNoticeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoticeId      int32                  `protobuf:"varint,1,opt,name=notice_id,json=noticeId,proto3" json:"notice_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoticeReq) Reset() {
	*x = DeleteNoticeReq{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoticeReq) ProtoMessage() {}

func (x *DeleteNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoticeReq.ProtoReflect.Descriptor instead.
func (*DeleteNoticeReq) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteNoticeReq) GetNoticeId() int32 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

// 删除通知的响应消息
type DeleteNoticeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoticeResp) Reset() {
	*x = DeleteNoticeResp{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoticeResp) ProtoMessage() {}

func (x *DeleteNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoticeResp.ProtoReflect.Descriptor instead.
func (*DeleteNoticeResp) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNoticeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteNoticeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 发布通知的请求消息
type PublishNoticeReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NoticeTitle    string                 `protobuf:"bytes,1,opt,name=notice_title,json=noticeTitle,proto3" json:"notice_title,omitempty"`
	NoticeContext  string                 `protobuf:"bytes,2,opt,name=notice_context,json=noticeContext,proto3" json:"notice_context,omitempty"`
	GroupList      []*GroupInfo           `protobuf:"bytes,3,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
	Deadline       string                 `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
	ReceiptStyleId string                 `protobuf:"bytes,5,opt,name=receipt_style_id,json=receiptStyleId,proto3" json:"receipt_style_id,omitempty"`
	Priority       string                 `protobuf:"bytes,6,opt,name=priority,proto3" json:"priority,omitempty"`
	FileList       []*FileInfo            `protobuf:"bytes,7,rep,name=file_list,json=fileList,proto3" json:"file_list,omitempty"`
	ReminderTimes  []string               `protobuf:"bytes,8,rep,name=reminder_times,json=reminderTimes,proto3" json:"reminder_times,omitempty"`
	Overtime       string                 `protobuf:"bytes,9,opt,name=overtime,proto3" json:"overtime,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PublishNoticeReq) Reset() {
	*x = PublishNoticeReq{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishNoticeReq) ProtoMessage() {}

func (x *PublishNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishNoticeReq.ProtoReflect.Descriptor instead.
func (*PublishNoticeReq) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{6}
}

func (x *PublishNoticeReq) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *PublishNoticeReq) GetNoticeContext() string {
	if x != nil {
		return x.NoticeContext
	}
	return ""
}

func (x *PublishNoticeReq) GetGroupList() []*GroupInfo {
	if x != nil {
		return x.GroupList
	}
	return nil
}

func (x *PublishNoticeReq) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *PublishNoticeReq) GetReceiptStyleId() string {
	if x != nil {
		return x.ReceiptStyleId
	}
	return ""
}

func (x *PublishNoticeReq) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *PublishNoticeReq) GetFileList() []*FileInfo {
	if x != nil {
		return x.FileList
	}
	return nil
}

func (x *PublishNoticeReq) GetReminderTimes() []string {
	if x != nil {
		return x.ReminderTimes
	}
	return nil
}

func (x *PublishNoticeReq) GetOvertime() string {
	if x != nil {
		return x.Overtime
	}
	return ""
}

// 发布通知的响应消息
type PublishNoticeResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishNoticeResp) Reset() {
	*x = PublishNoticeResp{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishNoticeResp) ProtoMessage() {}

func (x *PublishNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishNoticeResp.ProtoReflect.Descriptor instead.
func (*PublishNoticeResp) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{7}
}

func (x *PublishNoticeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PublishNoticeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 群组信息
type GroupInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName     string                 `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{8}
}

func (x *GroupInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

// 文件信息
type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileUrl       string                 `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP(), []int{9}
}

func (x *FileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileInfo) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

var File_api_TeaNoticeManage_v1_teaNoticeManage_proto protoreflect.FileDescriptor

const file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDesc = "" +
	"\n" +
	",api/TeaNoticeManage/v1/teaNoticeManage.proto\x12\x12TeaNoticeManage.v1\x1a\x1cgoogle/api/annotations.proto\"P\n" +
	"\x12CallbackReceiptReq\x12\x1b\n" +
	"\tnotice_id\x18\x01 \x01(\x05R\bnoticeId\x12\x1d\n" +
	"\n" +
	"student_id\x18\x02 \x01(\tR\tstudentId\";\n" +
	"\x13CallbackReceiptResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\".\n" +
	"\x0fRemindNoticeReq\x12\x1b\n" +
	"\tnotice_id\x18\x01 \x01(\x05R\bnoticeId\"8\n" +
	"\x10RemindNoticeResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\".\n" +
	"\x0fDeleteNoticeReq\x12\x1b\n" +
	"\tnotice_id\x18\x01 \x01(\x05R\bnoticeId\"8\n" +
	"\x10DeleteNoticeResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"\xfa\x02\n" +
	"\x10PublishNoticeReq\x12!\n" +
	"\fnotice_title\x18\x01 \x01(\tR\vnoticeTitle\x12%\n" +
	"\x0enotice_context\x18\x02 \x01(\tR\rnoticeContext\x12<\n" +
	"\n" +
	"group_list\x18\x03 \x03(\v2\x1d.TeaNoticeManage.v1.GroupInfoR\tgroupList\x12\x1a\n" +
	"\bdeadline\x18\x04 \x01(\tR\bdeadline\x12(\n" +
	"\x10receipt_style_id\x18\x05 \x01(\tR\x0ereceiptStyleId\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\tR\bpriority\x129\n" +
	"\tfile_list\x18\a \x03(\v2\x1c.TeaNoticeManage.v1.FileInfoR\bfileList\x12%\n" +
	"\x0ereminder_times\x18\b \x03(\tR\rreminderTimes\x12\x1a\n" +
	"\bovertime\x18\t \x01(\tR\bovertime\"9\n" +
	"\x11PublishNoticeResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"E\n" +
	"\tGroupInfo\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\tR\agroupId\x12\x1d\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tR\tgroupName\"B\n" +
	"\bFileInfo\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x19\n" +
	"\bfile_url\x18\x02 \x01(\tR\afileUrl2\x95\x04\n" +
	"\tTeaManage\x12\x88\x01\n" +
	"\x0fCallbackReceipt\x12&.TeaNoticeManage.v1.CallbackReceiptReq\x1a'.TeaNoticeManage.v1.CallbackReceiptResp\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/teacher/receipt/callback\x12|\n" +
	"\fRemindNotice\x12#.TeaNoticeManage.v1.RemindNoticeReq\x1a$.TeaNoticeManage.v1.RemindNoticeResp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/teacher/remind/notice\x12|\n" +
	"\fDeleteNotice\x12#.TeaNoticeManage.v1.DeleteNoticeReq\x1a$.TeaNoticeManage.v1.DeleteNoticeResp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/teacher/delete/notice\x12\x80\x01\n" +
	"\rPublishNotice\x12$.TeaNoticeManage.v1.PublishNoticeReq\x1a%.TeaNoticeManage.v1.PublishNoticeResp\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/teacher/publish/noticeBDZBArgoNavisV3/TeaNoticeManage/api/teaNoticeManage/v1;teaNoticeManageb\x06proto3"

var (
	file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescOnce sync.Once
	file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescData []byte
)

func file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescGZIP() []byte {
	file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescOnce.Do(func() {
		file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDesc), len(file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDesc)))
	})
	return file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDescData
}

var file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_api_TeaNoticeManage_v1_teaNoticeManage_proto_goTypes = []any{
	(*CallbackReceiptReq)(nil),  // 0: TeaNoticeManage.v1.CallbackReceiptReq
	(*CallbackReceiptResp)(nil), // 1: TeaNoticeManage.v1.CallbackReceiptResp
	(*RemindNoticeReq)(nil),     // 2: TeaNoticeManage.v1.RemindNoticeReq
	(*RemindNoticeResp)(nil),    // 3: TeaNoticeManage.v1.RemindNoticeResp
	(*DeleteNoticeReq)(nil),     // 4: TeaNoticeManage.v1.DeleteNoticeReq
	(*DeleteNoticeResp)(nil),    // 5: TeaNoticeManage.v1.DeleteNoticeResp
	(*PublishNoticeReq)(nil),    // 6: TeaNoticeManage.v1.PublishNoticeReq
	(*PublishNoticeResp)(nil),   // 7: TeaNoticeManage.v1.PublishNoticeResp
	(*GroupInfo)(nil),           // 8: TeaNoticeManage.v1.GroupInfo
	(*FileInfo)(nil),            // 9: TeaNoticeManage.v1.FileInfo
}
var file_api_TeaNoticeManage_v1_teaNoticeManage_proto_depIdxs = []int32{
	8, // 0: TeaNoticeManage.v1.PublishNoticeReq.group_list:type_name -> TeaNoticeManage.v1.GroupInfo
	9, // 1: TeaNoticeManage.v1.PublishNoticeReq.file_list:type_name -> TeaNoticeManage.v1.FileInfo
	0, // 2: TeaNoticeManage.v1.TeaManage.CallbackReceipt:input_type -> TeaNoticeManage.v1.CallbackReceiptReq
	2, // 3: TeaNoticeManage.v1.TeaManage.RemindNotice:input_type -> TeaNoticeManage.v1.RemindNoticeReq
	4, // 4: TeaNoticeManage.v1.TeaManage.DeleteNotice:input_type -> TeaNoticeManage.v1.DeleteNoticeReq
	6, // 5: TeaNoticeManage.v1.TeaManage.PublishNotice:input_type -> TeaNoticeManage.v1.PublishNoticeReq
	1, // 6: TeaNoticeManage.v1.TeaManage.CallbackReceipt:output_type -> TeaNoticeManage.v1.CallbackReceiptResp
	3, // 7: TeaNoticeManage.v1.TeaManage.RemindNotice:output_type -> TeaNoticeManage.v1.RemindNoticeResp
	5, // 8: TeaNoticeManage.v1.TeaManage.DeleteNotice:output_type -> TeaNoticeManage.v1.DeleteNoticeResp
	7, // 9: TeaNoticeManage.v1.TeaManage.PublishNotice:output_type -> TeaNoticeManage.v1.PublishNoticeResp
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_TeaNoticeManage_v1_teaNoticeManage_proto_init() }
func file_api_TeaNoticeManage_v1_teaNoticeManage_proto_init() {
	if File_api_TeaNoticeManage_v1_teaNoticeManage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDesc), len(file_api_TeaNoticeManage_v1_teaNoticeManage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_TeaNoticeManage_v1_teaNoticeManage_proto_goTypes,
		DependencyIndexes: file_api_TeaNoticeManage_v1_teaNoticeManage_proto_depIdxs,
		MessageInfos:      file_api_TeaNoticeManage_v1_teaNoticeManage_proto_msgTypes,
	}.Build()
	File_api_TeaNoticeManage_v1_teaNoticeManage_proto = out.File
	file_api_TeaNoticeManage_v1_teaNoticeManage_proto_goTypes = nil
	file_api_TeaNoticeManage_v1_teaNoticeManage_proto_depIdxs = nil
}
