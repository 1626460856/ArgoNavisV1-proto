// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: api/teaNoticeCheck/v1/teaNoticeCheck.proto

package teaNoticeCheck

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取单条通知详情的请求消息
type GetNoticeDetailsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoticeId      int32                  `protobuf:"varint,1,opt,name=notice_id,json=noticeId,proto3" json:"notice_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNoticeDetailsReq) Reset() {
	*x = GetNoticeDetailsReq{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoticeDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoticeDetailsReq) ProtoMessage() {}

func (x *GetNoticeDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoticeDetailsReq.ProtoReflect.Descriptor instead.
func (*GetNoticeDetailsReq) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{0}
}

func (x *GetNoticeDetailsReq) GetNoticeId() int32 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

// 包含单条通知详情的响应消息
type GetNoticeDetailsResp struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Code               int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	NoticeId           int32                  `protobuf:"varint,3,opt,name=notice_id,json=noticeId,proto3" json:"notice_id,omitempty"`
	NoticeTitle        string                 `protobuf:"bytes,4,opt,name=notice_title,json=noticeTitle,proto3" json:"notice_title,omitempty"`
	NoticeText         string                 `protobuf:"bytes,5,opt,name=notice_text,json=noticeText,proto3" json:"notice_text,omitempty"`
	Priority           string                 `protobuf:"bytes,6,opt,name=priority,proto3" json:"priority,omitempty"`
	GroupList          []*GroupInfo           `protobuf:"bytes,7,rep,name=group_list,json=groupList,proto3" json:"group_list,omitempty"`
	Deadline           string                 `protobuf:"bytes,8,opt,name=deadline,proto3" json:"deadline,omitempty"`
	ReceiptStyleId     string                 `protobuf:"bytes,9,opt,name=receipt_style_id,json=receiptStyleId,proto3" json:"receipt_style_id,omitempty"`
	ReceiptStyle       []*ReceiptStyleColumn  `protobuf:"bytes,10,rep,name=receipt_style,json=receiptStyle,proto3" json:"receipt_style,omitempty"`
	ReminderTimeList   []string               `protobuf:"bytes,11,rep,name=reminder_time_list,json=reminderTimeList,proto3" json:"reminder_time_list,omitempty"`
	Overtime           string                 `protobuf:"bytes,12,opt,name=overtime,proto3" json:"overtime,omitempty"`
	UnfinishedStudents []*StudentInfo         `protobuf:"bytes,13,rep,name=unfinished_students,json=unfinishedStudents,proto3" json:"unfinished_students,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetNoticeDetailsResp) Reset() {
	*x = GetNoticeDetailsResp{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNoticeDetailsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNoticeDetailsResp) ProtoMessage() {}

func (x *GetNoticeDetailsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNoticeDetailsResp.ProtoReflect.Descriptor instead.
func (*GetNoticeDetailsResp) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{1}
}

func (x *GetNoticeDetailsResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetNoticeDetailsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetNoticeDetailsResp) GetNoticeId() int32 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

func (x *GetNoticeDetailsResp) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *GetNoticeDetailsResp) GetNoticeText() string {
	if x != nil {
		return x.NoticeText
	}
	return ""
}

func (x *GetNoticeDetailsResp) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *GetNoticeDetailsResp) GetGroupList() []*GroupInfo {
	if x != nil {
		return x.GroupList
	}
	return nil
}

func (x *GetNoticeDetailsResp) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *GetNoticeDetailsResp) GetReceiptStyleId() string {
	if x != nil {
		return x.ReceiptStyleId
	}
	return ""
}

func (x *GetNoticeDetailsResp) GetReceiptStyle() []*ReceiptStyleColumn {
	if x != nil {
		return x.ReceiptStyle
	}
	return nil
}

func (x *GetNoticeDetailsResp) GetReminderTimeList() []string {
	if x != nil {
		return x.ReminderTimeList
	}
	return nil
}

func (x *GetNoticeDetailsResp) GetOvertime() string {
	if x != nil {
		return x.Overtime
	}
	return ""
}

func (x *GetNoticeDetailsResp) GetUnfinishedStudents() []*StudentInfo {
	if x != nil {
		return x.UnfinishedStudents
	}
	return nil
}

// 教师端搜索通知的请求消息
type TeacherSearchNoticeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Completion    string                 `protobuf:"bytes,2,opt,name=completion,proto3" json:"completion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeacherSearchNoticeReq) Reset() {
	*x = TeacherSearchNoticeReq{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeacherSearchNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherSearchNoticeReq) ProtoMessage() {}

func (x *TeacherSearchNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherSearchNoticeReq.ProtoReflect.Descriptor instead.
func (*TeacherSearchNoticeReq) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{2}
}

func (x *TeacherSearchNoticeReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *TeacherSearchNoticeReq) GetCompletion() string {
	if x != nil {
		return x.Completion
	}
	return ""
}

// 包含教师端搜索结果的响应消息
type TeacherSearchNoticeResp struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Code          int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	NoticeList    []*TeacherSearchNoticeItem `protobuf:"bytes,3,rep,name=notice_list,json=noticeList,proto3" json:"notice_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeacherSearchNoticeResp) Reset() {
	*x = TeacherSearchNoticeResp{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeacherSearchNoticeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherSearchNoticeResp) ProtoMessage() {}

func (x *TeacherSearchNoticeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherSearchNoticeResp.ProtoReflect.Descriptor instead.
func (*TeacherSearchNoticeResp) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{3}
}

func (x *TeacherSearchNoticeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TeacherSearchNoticeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TeacherSearchNoticeResp) GetNoticeList() []*TeacherSearchNoticeItem {
	if x != nil {
		return x.NoticeList
	}
	return nil
}

// 教师端搜索结果项
type TeacherSearchNoticeItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoticeId      int32                  `protobuf:"varint,1,opt,name=notice_id,json=noticeId,proto3" json:"notice_id,omitempty"`
	NoticeTitle   string                 `protobuf:"bytes,2,opt,name=notice_title,json=noticeTitle,proto3" json:"notice_title,omitempty"`
	Priority      string                 `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Deadline      string                 `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Completion    float64                `protobuf:"fixed64,5,opt,name=completion,proto3" json:"completion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeacherSearchNoticeItem) Reset() {
	*x = TeacherSearchNoticeItem{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeacherSearchNoticeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherSearchNoticeItem) ProtoMessage() {}

func (x *TeacherSearchNoticeItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherSearchNoticeItem.ProtoReflect.Descriptor instead.
func (*TeacherSearchNoticeItem) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{4}
}

func (x *TeacherSearchNoticeItem) GetNoticeId() int32 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

func (x *TeacherSearchNoticeItem) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *TeacherSearchNoticeItem) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *TeacherSearchNoticeItem) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *TeacherSearchNoticeItem) GetCompletion() float64 {
	if x != nil {
		return x.Completion
	}
	return 0
}

// 查询已发布通知列表的请求消息（空请求）
type GetPublishedNoticeListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublishedNoticeListReq) Reset() {
	*x = GetPublishedNoticeListReq{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishedNoticeListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishedNoticeListReq) ProtoMessage() {}

func (x *GetPublishedNoticeListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishedNoticeListReq.ProtoReflect.Descriptor instead.
func (*GetPublishedNoticeListReq) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{5}
}

// 包含已发布通知列表的响应消息
type GetPublishedNoticeListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	NoticeList    []*PublishedNoticeItem `protobuf:"bytes,3,rep,name=notice_list,json=noticeList,proto3" json:"notice_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublishedNoticeListResp) Reset() {
	*x = GetPublishedNoticeListResp{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishedNoticeListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishedNoticeListResp) ProtoMessage() {}

func (x *GetPublishedNoticeListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishedNoticeListResp.ProtoReflect.Descriptor instead.
func (*GetPublishedNoticeListResp) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{6}
}

func (x *GetPublishedNoticeListResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPublishedNoticeListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPublishedNoticeListResp) GetNoticeList() []*PublishedNoticeItem {
	if x != nil {
		return x.NoticeList
	}
	return nil
}

// 已发布通知项
type PublishedNoticeItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NoticeId      int32                  `protobuf:"varint,1,opt,name=notice_id,json=noticeId,proto3" json:"notice_id,omitempty"`
	NoticeTitle   string                 `protobuf:"bytes,2,opt,name=notice_title,json=noticeTitle,proto3" json:"notice_title,omitempty"`
	Priority      string                 `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Deadline      string                 `protobuf:"bytes,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
	Completion    float64                `protobuf:"fixed64,5,opt,name=completion,proto3" json:"completion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishedNoticeItem) Reset() {
	*x = PublishedNoticeItem{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishedNoticeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishedNoticeItem) ProtoMessage() {}

func (x *PublishedNoticeItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishedNoticeItem.ProtoReflect.Descriptor instead.
func (*PublishedNoticeItem) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{7}
}

func (x *PublishedNoticeItem) GetNoticeId() int32 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

func (x *PublishedNoticeItem) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *PublishedNoticeItem) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *PublishedNoticeItem) GetDeadline() string {
	if x != nil {
		return x.Deadline
	}
	return ""
}

func (x *PublishedNoticeItem) GetCompletion() float64 {
	if x != nil {
		return x.Completion
	}
	return 0
}

// 群组信息
type GroupInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupName     string                 `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupId       int32                  `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{8}
}

func (x *GroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GroupInfo) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

// 学生信息
type StudentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StudentId     string                 `protobuf:"bytes,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StudentInfo) Reset() {
	*x = StudentInfo{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StudentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentInfo) ProtoMessage() {}

func (x *StudentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentInfo.ProtoReflect.Descriptor instead.
func (*StudentInfo) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{9}
}

func (x *StudentInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudentInfo) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

// 收集表格式定义
type ReceiptStyleColumn struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ReceiptColumnName string                 `protobuf:"bytes,1,opt,name=receiptColumnName,proto3" json:"receiptColumnName,omitempty"`
	SingleOption      int32                  `protobuf:"varint,2,opt,name=SingleOption,proto3" json:"SingleOption,omitempty"`
	OptionList        []string               `protobuf:"bytes,3,rep,name=optionList,proto3" json:"optionList,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReceiptStyleColumn) Reset() {
	*x = ReceiptStyleColumn{}
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiptStyleColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptStyleColumn) ProtoMessage() {}

func (x *ReceiptStyleColumn) ProtoReflect() protoreflect.Message {
	mi := &file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptStyleColumn.ProtoReflect.Descriptor instead.
func (*ReceiptStyleColumn) Descriptor() ([]byte, []int) {
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP(), []int{10}
}

func (x *ReceiptStyleColumn) GetReceiptColumnName() string {
	if x != nil {
		return x.ReceiptColumnName
	}
	return ""
}

func (x *ReceiptStyleColumn) GetSingleOption() int32 {
	if x != nil {
		return x.SingleOption
	}
	return 0
}

func (x *ReceiptStyleColumn) GetOptionList() []string {
	if x != nil {
		return x.OptionList
	}
	return nil
}

var File_api_teaNoticeCheck_v1_teaNoticeCheck_proto protoreflect.FileDescriptor

const file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDesc = "" +
	"\n" +
	"*api/teaNoticeCheck/v1/teaNoticeCheck.proto\x12\x0eTeaNoticeCheck\x1a\x1cgoogle/api/annotations.proto\"2\n" +
	"\x13GetNoticeDetailsReq\x12\x1b\n" +
	"\tnotice_id\x18\x01 \x01(\x05R\bnoticeId\"\x9a\x04\n" +
	"\x14GetNoticeDetailsResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12\x1b\n" +
	"\tnotice_id\x18\x03 \x01(\x05R\bnoticeId\x12!\n" +
	"\fnotice_title\x18\x04 \x01(\tR\vnoticeTitle\x12\x1f\n" +
	"\vnotice_text\x18\x05 \x01(\tR\n" +
	"noticeText\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\tR\bpriority\x128\n" +
	"\n" +
	"group_list\x18\a \x03(\v2\x19.TeaNoticeCheck.GroupInfoR\tgroupList\x12\x1a\n" +
	"\bdeadline\x18\b \x01(\tR\bdeadline\x12(\n" +
	"\x10receipt_style_id\x18\t \x01(\tR\x0ereceiptStyleId\x12G\n" +
	"\rreceipt_style\x18\n" +
	" \x03(\v2\".TeaNoticeCheck.ReceiptStyleColumnR\freceiptStyle\x12,\n" +
	"\x12reminder_time_list\x18\v \x03(\tR\x10reminderTimeList\x12\x1a\n" +
	"\bovertime\x18\f \x01(\tR\bovertime\x12L\n" +
	"\x13unfinished_students\x18\r \x03(\v2\x1b.TeaNoticeCheck.StudentInfoR\x12unfinishedStudents\"R\n" +
	"\x16TeacherSearchNoticeReq\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12\x1e\n" +
	"\n" +
	"completion\x18\x02 \x01(\tR\n" +
	"completion\"\x89\x01\n" +
	"\x17TeacherSearchNoticeResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12H\n" +
	"\vnotice_list\x18\x03 \x03(\v2'.TeaNoticeCheck.TeacherSearchNoticeItemR\n" +
	"noticeList\"\xb1\x01\n" +
	"\x17TeacherSearchNoticeItem\x12\x1b\n" +
	"\tnotice_id\x18\x01 \x01(\x05R\bnoticeId\x12!\n" +
	"\fnotice_title\x18\x02 \x01(\tR\vnoticeTitle\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\tR\bpriority\x12\x1a\n" +
	"\bdeadline\x18\x04 \x01(\tR\bdeadline\x12\x1e\n" +
	"\n" +
	"completion\x18\x05 \x01(\x01R\n" +
	"completion\"\x1b\n" +
	"\x19GetPublishedNoticeListReq\"\x88\x01\n" +
	"\x1aGetPublishedNoticeListResp\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12D\n" +
	"\vnotice_list\x18\x03 \x03(\v2#.TeaNoticeCheck.PublishedNoticeItemR\n" +
	"noticeList\"\xad\x01\n" +
	"\x13PublishedNoticeItem\x12\x1b\n" +
	"\tnotice_id\x18\x01 \x01(\x05R\bnoticeId\x12!\n" +
	"\fnotice_title\x18\x02 \x01(\tR\vnoticeTitle\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\tR\bpriority\x12\x1a\n" +
	"\bdeadline\x18\x04 \x01(\tR\bdeadline\x12\x1e\n" +
	"\n" +
	"completion\x18\x05 \x01(\x01R\n" +
	"completion\"E\n" +
	"\tGroupInfo\x12\x1d\n" +
	"\n" +
	"group_name\x18\x01 \x01(\tR\tgroupName\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\x05R\agroupId\"@\n" +
	"\vStudentInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"student_id\x18\x02 \x01(\tR\tstudentId\"\x86\x01\n" +
	"\x12ReceiptStyleColumn\x12,\n" +
	"\x11receiptColumnName\x18\x01 \x01(\tR\x11receiptColumnName\x12\"\n" +
	"\fSingleOption\x18\x02 \x01(\x05R\fSingleOption\x12\x1e\n" +
	"\n" +
	"optionList\x18\x03 \x03(\tR\n" +
	"optionList2\xb7\x03\n" +
	"\bTeaCheck\x12\x8a\x01\n" +
	"\x10GetNoticeDetails\x12#.TeaNoticeCheck.GetNoticeDetailsReq\x1a$.TeaNoticeCheck.GetNoticeDetailsResp\"+\x82\xd3\xe4\x93\x02%\x12#/teacher/notice/details/{notice_id}\x12\x86\x01\n" +
	"\x13TeacherSearchNotice\x12&.TeaNoticeCheck.TeacherSearchNoticeReq\x1a'.TeaNoticeCheck.TeacherSearchNoticeResp\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/teacher/search/notice\x12\x94\x01\n" +
	"\x16GetPublishedNoticeList\x12).TeaNoticeCheck.GetPublishedNoticeListReq\x1a*.TeaNoticeCheck.GetPublishedNoticeListResp\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/teacher/search/notice/listBAZ?ArgoNavisV3/TeaNoticeCheck/api/teaNoticeCheck/v1;teaNoticeCheckb\x06proto3"

var (
	file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescOnce sync.Once
	file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescData []byte
)

func file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescGZIP() []byte {
	file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescOnce.Do(func() {
		file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDesc), len(file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDesc)))
	})
	return file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDescData
}

var file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_goTypes = []any{
	(*GetNoticeDetailsReq)(nil),        // 0: TeaNoticeCheck.GetNoticeDetailsReq
	(*GetNoticeDetailsResp)(nil),       // 1: TeaNoticeCheck.GetNoticeDetailsResp
	(*TeacherSearchNoticeReq)(nil),     // 2: TeaNoticeCheck.TeacherSearchNoticeReq
	(*TeacherSearchNoticeResp)(nil),    // 3: TeaNoticeCheck.TeacherSearchNoticeResp
	(*TeacherSearchNoticeItem)(nil),    // 4: TeaNoticeCheck.TeacherSearchNoticeItem
	(*GetPublishedNoticeListReq)(nil),  // 5: TeaNoticeCheck.GetPublishedNoticeListReq
	(*GetPublishedNoticeListResp)(nil), // 6: TeaNoticeCheck.GetPublishedNoticeListResp
	(*PublishedNoticeItem)(nil),        // 7: TeaNoticeCheck.PublishedNoticeItem
	(*GroupInfo)(nil),                  // 8: TeaNoticeCheck.GroupInfo
	(*StudentInfo)(nil),                // 9: TeaNoticeCheck.StudentInfo
	(*ReceiptStyleColumn)(nil),         // 10: TeaNoticeCheck.ReceiptStyleColumn
}
var file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_depIdxs = []int32{
	8,  // 0: TeaNoticeCheck.GetNoticeDetailsResp.group_list:type_name -> TeaNoticeCheck.GroupInfo
	10, // 1: TeaNoticeCheck.GetNoticeDetailsResp.receipt_style:type_name -> TeaNoticeCheck.ReceiptStyleColumn
	9,  // 2: TeaNoticeCheck.GetNoticeDetailsResp.unfinished_students:type_name -> TeaNoticeCheck.StudentInfo
	4,  // 3: TeaNoticeCheck.TeacherSearchNoticeResp.notice_list:type_name -> TeaNoticeCheck.TeacherSearchNoticeItem
	7,  // 4: TeaNoticeCheck.GetPublishedNoticeListResp.notice_list:type_name -> TeaNoticeCheck.PublishedNoticeItem
	0,  // 5: TeaNoticeCheck.TeaCheck.GetNoticeDetails:input_type -> TeaNoticeCheck.GetNoticeDetailsReq
	2,  // 6: TeaNoticeCheck.TeaCheck.TeacherSearchNotice:input_type -> TeaNoticeCheck.TeacherSearchNoticeReq
	5,  // 7: TeaNoticeCheck.TeaCheck.GetPublishedNoticeList:input_type -> TeaNoticeCheck.GetPublishedNoticeListReq
	1,  // 8: TeaNoticeCheck.TeaCheck.GetNoticeDetails:output_type -> TeaNoticeCheck.GetNoticeDetailsResp
	3,  // 9: TeaNoticeCheck.TeaCheck.TeacherSearchNotice:output_type -> TeaNoticeCheck.TeacherSearchNoticeResp
	6,  // 10: TeaNoticeCheck.TeaCheck.GetPublishedNoticeList:output_type -> TeaNoticeCheck.GetPublishedNoticeListResp
	8,  // [8:11] is the sub-list for method output_type
	5,  // [5:8] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_init() }
func file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_init() {
	if File_api_teaNoticeCheck_v1_teaNoticeCheck_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDesc), len(file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_goTypes,
		DependencyIndexes: file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_depIdxs,
		MessageInfos:      file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_msgTypes,
	}.Build()
	File_api_teaNoticeCheck_v1_teaNoticeCheck_proto = out.File
	file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_goTypes = nil
	file_api_teaNoticeCheck_v1_teaNoticeCheck_proto_depIdxs = nil
}
